/**
 * Autor: Oscar Fuentes Alvarado
 * Fecha de creación: 01 de junio de 2022
 * Fecha de actualización: 09 de junio de 2022
 * Descripción: clase JPanel para controlar las operaciones CRUD
 * aplicados a los objetos Prestamos, además enlazamos
 * las listas provenientes de otros páneles para ocupar
 * su información
 */
package view;

import controller.EncargadoController;
import controller.PrestamoController;
import controller.LibroController;
import controller.UsuarioController;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pojo.Usuario;
import pojo.Libro;
import pojo.Encargado;
import pojo.Prestamo;

/**
 *
 * @author oscar
 */
public class PanelPrestamo extends javax.swing.JPanel {

    private List<Libro> listaLibro;
    private List<Usuario> listaAlumno;
    private List<Encargado> listaEncargado;
    private List<Prestamo> listaPrestamo;

    private PrestamoController prestController;
    private DefaultTableModel modelo;
    private List<String> listaIsbn;

    private LibroController libroAux;
    private UsuarioController alumnoAux;
    private EncargadoController encargadoAux;

    private SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

    private int id;

    /**
     * Constructor que recibe las listas cargadas de información. Inicializa
     * algunos atributos
     */
    public PanelPrestamo(List<Prestamo> listPrestamo, List<Libro> listLibro,
            List<Usuario> listAlumno, List<Encargado> listEncargado) {
        initComponents();

        prestController = new PrestamoController();
        listaLibro = listLibro;
        listaAlumno = listAlumno;
        listaEncargado = listEncargado;

        libroAux = new LibroController();
        alumnoAux = new UsuarioController();
        encargadoAux = new EncargadoController();

        listaPrestamo = listPrestamo;
        modelo = (DefaultTableModel) jTable1.getModel();
        listaIsbn = new ArrayList<>();
        jText_FechaSol.setText(formatter.format(new Date()));
        jText_FechaSol.setEditable(false);
        prestController.mostrarPrestamo(listPrestamo, listaLibro,
                listaEncargado, listaAlumno, modelo);

        rellenarComboAlumno();
        rellenarComboEncargado();
        rellenarComboLibro();
        //evita que las columnas de la tabla cambien de posicion
        jTable1.getTableHeader().setReorderingAllowed(false);
    }

    /**
     * Vacía la información del jtext de la fecha de entrega
     */
    public void limpiar() {
        jText_FechaEnt.setText("00/00/0000");
        jComboBox_matricula.setSelectedItem("- - Matrícula - -");
        jComboBox_encargado.setSelectedItem("- - Encargado - -");
        jComboBox_isbn.setSelectedItem("- - ISBN - -");
    }

    /**
     * Lee datos de las entradas de texto y las guarda en un objeto préstamo
     */
    public Prestamo leer() {
        Prestamo prestamoLeer = new Prestamo();
        prestamoLeer.setId(id);
        prestamoLeer.setFechaSol(ParseFecha(jText_FechaSol.getText()));
        prestamoLeer.setFechaEnt(ParseFecha(jText_FechaEnt.getText()));
        prestamoLeer.setMatricula(jComboBox_matricula.getSelectedItem().
                toString());
        prestamoLeer.setCodTrab(jComboBox_encargado.getSelectedItem().
                toString());
        listaIsbn.add(jComboBox_isbn.getSelectedItem().toString());
        prestamoLeer.setNombres(listaIsbn);
        return prestamoLeer;
    }

    /**
     * Método para convertir una fecha a un formato predefinido
     */
    public static Date ParseFecha(String fecha) {
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaDate = null;
        try {
            fechaDate = formato.parse(fecha);
        } catch (ParseException ex) {

        }
        return fechaDate;
    }

    /**
     * Actualizamos la información del ComboBox alumno
     */
    public void rellenarComboAlumno() {
        for (int i = 0; i < listaAlumno.size(); i++) {
            jComboBox_matricula.addItem(listaAlumno.get(i).getMatricula());
        }
    }

    /**
     * Actualizamos la información del ComboBox Encargado
     */
    public void rellenarComboEncargado() {
        for (int i = 0; i < listaEncargado.size(); i++) {
            jComboBox_encargado.addItem(listaEncargado.get(i).getCodTrab());
        }
    }

    /**
     * Actualizamos la información del ComboBox Libro
     */
    public void rellenarComboLibro() {
        for (int i = 0; i < listaLibro.size(); i++) {
            jComboBox_isbn.addItem(listaLibro.get(i).getIsbn());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jText_FechaSol = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jText_FechaEnt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jComboBox_matricula = new javax.swing.JComboBox<>();
        jComboBox_encargado = new javax.swing.JComboBox<>();
        jComboBox_isbn = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 51));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(39, 154, 180));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(98, 193, 222));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/agregarL.png"))); // NOI18N
        jButton1.setText("Agregar   ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 130, -1));

        jButton2.setBackground(new java.awt.Color(98, 193, 222));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/actualizar.png"))); // NOI18N
        jButton2.setText("Actualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 130, -1));

        jButton3.setBackground(new java.awt.Color(98, 193, 222));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/eliminar.png"))); // NOI18N
        jButton3.setText("Eliminar   ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 130, -1));

        add(jPanel1, java.awt.BorderLayout.LINE_END);

        jPanel2.setBackground(new java.awt.Color(100, 176, 176));
        jPanel2.setPreferredSize(new java.awt.Dimension(615, 347));

        jLabel1.setText("Solicitud");

        jText_FechaSol.setBackground(new java.awt.Color(39, 154, 180));
        jText_FechaSol.setMaximumSize(new java.awt.Dimension(150, 20));
        jText_FechaSol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jText_FechaSolActionPerformed(evt);
            }
        });

        jLabel2.setText("Entrega");

        jText_FechaEnt.setBackground(new java.awt.Color(39, 154, 180));
        jText_FechaEnt.setText("00/00/0000");
        jText_FechaEnt.setMaximumSize(new java.awt.Dimension(200, 20));
        jText_FechaEnt.setMinimumSize(new java.awt.Dimension(74, 24));

        jLabel3.setText("Matrícula");

        jLabel4.setText("Encargado");

        jLabel5.setText("Libros");

        jTable1.setBackground(new java.awt.Color(66, 248, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Fecha Solicitud", "Fecha entrega", "Matrícula", "Encargado", "Libros"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionBackground(new java.awt.Color(153, 153, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(25);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(30);
            jTable1.getColumnModel().getColumn(1).setMinWidth(120);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(2).setMinWidth(120);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(3).setMinWidth(120);
            jTable1.getColumnModel().getColumn(4).setMinWidth(120);
            jTable1.getColumnModel().getColumn(5).setMinWidth(120);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
        }

        jButton6.setBackground(new java.awt.Color(0, 255, 222));
        jButton6.setText("+");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jComboBox_matricula.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- - Matrícula - -" }));
        jComboBox_matricula.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_matriculaItemStateChanged(evt);
            }
        });
        jComboBox_matricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_matriculaActionPerformed(evt);
            }
        });

        jComboBox_encargado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- - Encargado - -" }));
        jComboBox_encargado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_encargadoActionPerformed(evt);
            }
        });

        jComboBox_isbn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- - ISBN - -" }));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/borrar.png"))); // NOI18N
        jButton5.setText("Limpiar");
        jButton5.setContentAreaFilled(false);
        jButton5.setMaximumSize(new java.awt.Dimension(83, 24));
        jButton5.setMinimumSize(new java.awt.Dimension(83, 24));
        jButton5.setPreferredSize(new java.awt.Dimension(83, 24));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jText_FechaSol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jComboBox_encargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 11, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_isbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jText_FechaEnt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jButton6))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_matricula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jText_FechaSol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jText_FechaEnt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox_matricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jButton6)
                    .addComponent(jComboBox_encargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_isbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Botón para agregar un nuevo elemento (objeto) a la lista
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Prestamo prestamo = new Prestamo();

        Usuario alumno = alumnoAux.getUsuario(listaAlumno,
                jComboBox_matricula.getSelectedItem().toString());
        Libro libro = libroAux.getLibro(listaLibro,
                jComboBox_isbn.getSelectedItem().toString());
        Encargado encargado = encargadoAux.getEncargado(listaEncargado,
                jComboBox_encargado.getSelectedItem().toString());

        if (jText_FechaEnt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Rellena el campo\nfecha de "
                    + "entrega");

        } else if (jComboBox_matricula.getSelectedItem().equals("- - Matrícula"
                + " - -")) {
            JOptionPane.showMessageDialog(null, "Selecciona una matrícula");
        } else if (jComboBox_encargado.getSelectedItem().equals("- - Encargado"
                + " - -")) {
            JOptionPane.showMessageDialog(null, "Selecciona un código de traba"
                    + "jador");
        } else if (jComboBox_isbn.getSelectedItem().equals("- - ISBN - -")) {
            JOptionPane.showMessageDialog(null, "Selecciona una libro");
        } else {
            prestamo = leer();
            listaPrestamo = prestController.crearPrestamo(listaPrestamo,
                    prestamo);
            limpiar();
            List<String> vacio = new ArrayList<>();
            listaIsbn = vacio;
        }

        prestController.mostrarPrestamo(listaPrestamo, listaLibro,
                listaEncargado, listaAlumno, modelo);

    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Botón para eliminar un objeto de la lista
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jText_FechaEnt.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Rellena todos los campos");
        } else {
            Prestamo leerD = leer();
            Prestamo prestamo23 = prestController.getPrestamo(listaPrestamo,
                    leerD);
            if (prestamo23 != null) {
                listaPrestamo = prestController.eliminarPrestamo(listaPrestamo,
                        leerD);
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "No hay registro "
                        + "del prestamo");
            }
        }
        prestController.mostrarPrestamo(listaPrestamo, listaLibro,
                listaEncargado, listaAlumno, modelo);
    }//GEN-LAST:event_jButton3ActionPerformed
    /**
     * Botón para actualizar datos de un objeto dentro de la lista
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Prestamo prestamo1 = new Prestamo();
        if (jText_FechaSol.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Rellena todos los campos");
        } else if (jComboBox_matricula.getSelectedItem().equals("- - Matrícula"
                + " - -")) {
            JOptionPane.showMessageDialog(null, "Selecciona una matrícula");
        } else if (jComboBox_encargado.getSelectedItem().equals("- - Encargado"
                + " - -")) {
            JOptionPane.showMessageDialog(null, "Selecciona un código de traba"
                    + "jador");
        } else if (jComboBox_isbn.getSelectedItem().equals("- - ISBN - -")) {
            JOptionPane.showMessageDialog(null, "Selecciona una libro");
        } else {
            prestamo1 = leer();
            listaPrestamo = prestController.actualizarPrestamo(listaPrestamo,
                    id, prestamo1);
            prestController.mostrarPrestamo(listaPrestamo, listaLibro,
                    listaEncargado, listaAlumno, modelo);
            limpiar();
            jText_FechaSol.setEditable(true);
            List<String> vacio = new ArrayList<>();
            listaIsbn = vacio;
        }
        jText_FechaSol.setEditable(true);
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Muestra en los cuadros de texto los datos de un objeto seleccionado desde
     * la tabla
     */
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        id = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(),
                0).toString());
        jText_FechaSol.setText(jTable1.getValueAt(jTable1.getSelectedRow(),
                1).toString());
        jText_FechaEnt.setText(jTable1.getValueAt(jTable1.getSelectedRow(),
                2).toString());
        jComboBox_matricula.setSelectedItem(jTable1.getValueAt(
                jTable1.getSelectedRow(), 3));
        jComboBox_encargado.setSelectedItem(jTable1.getValueAt(
                jTable1.getSelectedRow(), 4));
        String isbn = jTable1.getValueAt(jTable1.getSelectedRow(), 5).
                toString();
        jComboBox_isbn.setSelectedItem(isbn.substring(1, isbn.length() - 1));
    }//GEN-LAST:event_jTable1MouseClicked
    /**
     * Vacía el contenido de los cuadros de texto
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        limpiar();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jText_FechaSolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jText_FechaSolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jText_FechaSolActionPerformed

    private void jComboBox_matriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_matriculaActionPerformed

    }//GEN-LAST:event_jComboBox_matriculaActionPerformed

    private void jComboBox_matriculaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_matriculaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_matriculaItemStateChanged

    private void jComboBox_encargadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_encargadoActionPerformed

    }//GEN-LAST:event_jComboBox_encargadoActionPerformed
    /**
     * Busca un objeto dentro de la lista
     */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Libro libroBuscar = libroAux.getLibro(listaLibro,
                jComboBox_isbn.getSelectedItem().toString());
        if (libroBuscar != null) {
            listaIsbn.add(jComboBox_isbn.getSelectedItem().toString());
        } else {
            JOptionPane.showMessageDialog(null, "no hay registro del libro");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox_encargado;
    private javax.swing.JComboBox<String> jComboBox_isbn;
    private javax.swing.JComboBox<String> jComboBox_matricula;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jText_FechaEnt;
    private javax.swing.JTextField jText_FechaSol;
    // End of variables declaration//GEN-END:variables
}
